/*----------------------------------------------------------------------------*/
/* Copyright (c) FIRST 2008. All Rights Reserved.                             */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

package org.usfirst.frc.team3826.robot;


import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Jaguar;
import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.Relay;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the SimpleRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */
public class Robot extends IterativeRobot {
    /**
     * This function is called once each time the robot enters autonomous mode.
     */
    RobotDrive chassis = new RobotDrive(1, 2);
    //Jaguar FrontLeftMotor = new Jaguar(1);
    //Jaguar BackLeftMotor = new Jaguar(2);
    //Jaguar FrontLeftMotor = new Jaguar(3);
    //Jaguar FrontLeftMotor = new Jaguar(4);
    Joystick leftStick = new Joystick(1);
    Joystick rightStick = new Joystick(2);
    Joystick controlStick = new Joystick(3);
    Jaguar topWheels = new Jaguar(5);
    Jaguar armMotor = new Jaguar(6);
    DoubleSolenoid launcherSol = new DoubleSolenoid(1, 2);
    Compressor compOne = new Compressor(1);
    Relay fanAndCamera = new Relay(2, Relay.Direction.kForward);
    static int count = 0;
    static double topSpin, armSpin;
    
    public void autonomous() {
        
    }

    /**
     * This function is called once each time the robot enters operator control.
     */
    public void operatorControl() {
        chassis.setSafetyEnabled(true);
        topWheels.enableDeadbandElimination(true);
        armMotor.enableDeadbandElimination(true);
        compOne.start();
        //fanAndCamera.set(Relay.Value.kReverse);
        //fanAndCamera.set(Relay.Value.kForward);
        while (isOperatorControl() && isEnabled()) {
            chassis.arcadeDrive(controlStick);
            /* if (controlStick.getRawButton(9)) {
                if (topSpin > -1) {
                    topSpin -= .05;
                } 
            } else 
                if (topSpin < 0) {
                    topSpin += .1;
                } 
            }
        if (topSpin < -1) {
            topSpin = -1;
        } if (topSpin > 0) {
            topSpin = 0;
        }
            */
            if (Math.abs(controlStick.getRawAxis(3))>.2) {
                topSpin = -Math.abs(controlStick.getRawAxis(3));
            } else {
                topSpin = 0;
            }
            if (Math.abs(controlStick.getRawAxis(6)) < .2) {
                armSpin = 0;
            } else {
                armSpin = -controlStick.getRawAxis(6);
            }
            if (controlStick.getRawAxis(4)>.5) {
                launcherSol.set(DoubleSolenoid.Value.kForward);
                count = 0;
            } else {
                count++;
                if (count>25) {
                    launcherSol.set(DoubleSolenoid.Value.kReverse);  
                }
            }
            topWheels.set(topSpin);
            armMotor.set(armSpin);
            Timer.delay(0.01);
        }
    }}
    
    /**
     * This function is called once each time the robot enters test mode.
     */
    //public void test() {
    
    //}
//}
